parameters:
    oro_distribution.composer_json:                           '%kernel.project_dir%/composer.json'

services:
    oro_distribution.routing_loader:
        class: Oro\Bundle\DistributionBundle\Routing\OroAutoLoader
        arguments:
            - '@kernel'
            - '@oro_distribution.routing_options_resolver'
        calls:
            - [setResolver, ['@routing.resolver']]
            - [setEventDispatcher, ['@event_dispatcher']]
            - [setCache, ['@oro_distribution.routing_loader.cache']]
        tags:
            - { name: routing.loader }

    oro_distribution.expose_routing_loader:
        class: Oro\Bundle\DistributionBundle\Routing\OroExposeLoader
        arguments:
            - '@kernel'
            - '@oro_distribution.routing_options_resolver'
        calls:
            - [setResolver, ['@routing.resolver']]
            - [setEventDispatcher, ['@event_dispatcher']]
            - [setCache, ['@oro_distribution.routing_loader.cache']]
        tags:
            - { name: routing.loader, priority: 255 }

    oro_distribution.routing_loader.cache:
        class: Oro\Bundle\DistributionBundle\Routing\SharedData
        public: false

    oro_distribution.routing_options_resolver:
        class: Oro\Component\Routing\Resolver\ChainRouteOptionsResolver
        public: false
        arguments:
            - !tagged_iterator routing.options_resolver

    oro_distribution.composer.io:
        class: Composer\IO\BufferIO
        public: false
        lazy: true

    oro_distribution.composer:
        class: Composer\Composer
        factory: ['Composer\Factory', create]
        arguments: ['@oro_distribution.composer.io', '%oro_distribution.composer_json%']
        lazy: true

    oro_distribution.composer.installation_manager:
        class: Composer\Installer\InstallationManager
        public: true
        factory: ['@oro_distribution.composer', getInstallationManager]
        lazy: true

    oro_distribution.composer.json_file:
        class: Composer\Json\JsonFile
        public: true
        arguments:
          - '%oro_distribution.composer_json%'

    oro_distribution.database_translation.loader:
        class: Oro\Bundle\DistributionBundle\Translation\DbalTranslationLoader
        arguments:
            - '@doctrine'
        tags:
            - { name: translation.loader, alias: oro_dbal_translation }

    oro_distribution.event_listener.install_command_deployment_type:
        class: Oro\Bundle\DistributionBundle\EventListener\InstallCommandDeploymentTypeListener
        arguments:
            - '%kernel.project_dir%'
            - '%deployment_type%'
        tags:
            - { name: kernel.event_listener, event: installer.database_preparation.before, method: afterDatabasePreparation }
