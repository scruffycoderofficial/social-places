{% macro renderRestrictionsView(scopeEntities, scopes) %}
    {% import _self as self %}
    {% if scopes is empty or oro_scope_is_empty(scopeEntities, scopes) %}
        {{ 'N/A'|trans }}
    {% else %}
        {% set gridHtml = self.renderRestrictionsViewGrid(scopeEntities, scopes) %}
        {{ gridHtml }}
    {% endif %}
{% endmacro %}

{% macro renderRestrictionsViewGrid(scopeEntities, scopes) %}
    <div class="grid-container">
        <table class="grid table table-bordered table-condensed table-fixed table-hover">
            <thead>
                <tr>
                    {% for entityClass in scopeEntities %}
                        <th><span>{{ oro_entity_config_value(entityClass, 'label')|trans }}</span></th>
                    {% endfor %}
                </tr>
            </thead>
            <tbody>
            {% for scope in scopes %}
                <tr>
                    {% for fieldName, entityClass in scopeEntities %}
                        <td>
                            {{ attribute(scope, fieldName) ? : 'Any'|trans }}
                        </td>
                    {% endfor %}
                </tr>
            {% endfor %}
            </tbody>
        </table>
    </div>
{% endmacro %}
