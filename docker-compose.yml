version: "3.5"

services:

  db:
    image: mysql:5.7
    container_name: ${COMPOSE_PROJECT_NAME}_db1
    volumes:
      - ./data/mysql:/var/lib/mysql
    restart: unless-stopped
    ports:
      - 3408:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: capable_platform_db
      MYSQL_USER: user
      MYSQL_PASSWORD: tester
    networks:
      - capable-platform-network

  nginx:
    image: ${COMPOSE_PROJECT_NAME}_nginx:latest
    build:
      context: ./build/
      args:
        - "BUILD_ARGUMENT_ENV=dev"
      dockerfile: ./nginx/Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}_nginx
    restart: always
    ports:
      - 90:80
      - 553:443
    volumes:
      - .:/var/www/html:ro
    depends_on:
      - app
    networks:
      - capable-platform-network

  app: &symfony-template
    image: ${COMPOSE_PROJECT_NAME}_app:latest
    build:
      context: .
      args:
        - "BUILD_ARGUMENT_ENV=dev"
        - "BUILD_ARGUMENT_DEBUG_ENABLED=true"
      dockerfile: ./Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}_app
    volumes:
      - .:/var/www/html
    depends_on:
      - db
      - rabbitmq
    networks:
      - capable-platform-network

  supervisord:
    <<: *symfony-template
    container_name: ${COMPOSE_PROJECT_NAME}_supervisord
    expose: [ ]
    command: [ "/usr/bin/supervisord" ]

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ${COMPOSE_PROJECT_NAME}_phpmyadmin
    restart: always
    ports:
      - 8002:80
    environment:
      PMA_HOST: db
    networks:
      - capable-platform-network
    depends_on:
      - db
        
  mailhog:
    image: mailhog/mailhog
    container_name: ${COMPOSE_PROJECT_NAME}_mailhog
    ports:
      - 1003:1025
      - 8003:8025
    networks:
      - capable-platform-network
        
  redis:
    image: redis:alpine
    container_name: ${COMPOSE_PROJECT_NAME}_redis
    networks:
      - capable-platform-network
        
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    container_name: ${COMPOSE_PROJECT_NAME}_elastics
    environment:
      - cluster.name=cp-es-default-cluster
      - xpack.security.enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - discovery.zen.minimum_master_nodes=1
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9500:9200
      - 9400:9300
    networks:
      - capable-platform-network

  rabbitmq:
    image: rabbitmq:3.9-management
    container_name: ${COMPOSE_PROJECT_NAME}_rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=tester
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - capable-platform-network

  kibana:
    image: 'docker.elastic.co/kibana/kibana:7.4.0'
    container_name: ${COMPOSE_PROJECT_NAME}_kibana
    environment:
      SERVER_NAME: kibana.local
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - 5601:5601
    networks:
      - capable-platform-network

networks:
  capable-platform-network:
    driver: bridge